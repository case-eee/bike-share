require_relative '../spec_helper'

describe "" do
  describe "validations" do
    it "won't allow a conditions without date to be saved" do
      invalid_condition = Condition.write(max_temperature_f: 45,
                                          mean_temperature_f: 20,
                                          min_temperature_f: 20,
                                          mean_humidity: 20,
                                          mean_visibility_miles: 1,
                                          max_wind_speed_mph: 23,
                                          precipitation_inches: 0)

      expect(invalid_condition).to_not be_valid
    end
    it "won't allow a conditions without max_temperature_f to be saved" do
      invalid_condition = Condition.write(date: "2013-12-12",
                                          mean_temperature_f: 20,
                                          min_temperature_f: 20,
                                          mean_humidity: 20,
                                          mean_visibility_miles: 1,
                                          max_wind_speed_mph: 23,
                                          precipitation_inches: 0)

      expect(invalid_condition).to_not be_valid
    end
    it "won't allow a conditions without min_temperature_f to be saved" do
      invalid_condition = Condition.write(date: "2013-12-12",
                                          max_temperature_f: 45,
                                          mean_temperature_f: 20,
                                          mean_humidity: 20,
                                          mean_visibility_miles: 1,
                                          max_wind_speed_mph: 23,
                                          precipitation_inches: 0)

      expect(invalid_condition).to_not be_valid
    end
    it "won't allow a conditions without mean_humidity to be saved" do
      invalid_condition = Condition.write(date: "2013-12-12",
                                          max_temperature_f: 45,
                                          mean_temperature_f: 20,
                                          min_temperature_f: 20,
                                          mean_visibility_miles: 1,
                                          max_wind_speed_mph: 23,
                                          precipitation_inches: 0)

      expect(invalid_condition).to_not be_valid
    end
    it "won't allow a conditions without mean_visibility_miles to be saved" do
      invalid_condition = Condition.write(date: "2013-12-12",
                                          max_temperature_f: 45,
                                          mean_temperature_f: 20,
                                          min_temperature_f: 20,
                                          mean_humidity: 20,
                                          max_wind_speed_mph: 23,
                                          precipitation_inches: 0)

      expect(invalid_condition).to_not be_valid
    end
    it "won't allow a conditions without max_wind_speed_mph to be saved" do
      invalid_condition = Condition.write(date: "2013-12-12",
                                          max_temperature_f: 45,
                                          mean_temperature_f: 20,
                                          min_temperature_f: 20,
                                          mean_humidity: 20,
                                          mean_visibility_miles: 1,
                                          precipitation_inches: 0)

      expect(invalid_condition).to_not be_valid
    end
    it "won't allow a conditions without precipitation_inches to be saved" do
      invalid_condition = Condition.write(date: "2013-12-12",
                                          max_temperature_f: 45,
                                          mean_temperature_f: 20,
                                          min_temperature_f: 20,
                                          mean_humidity: 20,
                                          mean_visibility_miles: 1,
                                          max_wind_speed_mph: 23)

      expect(invalid_condition).to_not be_valid
    end
    it "won't allow a conditions without mean_temperature_f to be saved" do
      invalid_condition = Condition.write(date: "2013-12-12",
                                          max_temperature_f: 45,
                                          mean_temperature_f: 20,
                                          mean_humidity: 20,
                                          mean_visibility_miles: 1,
                                          max_wind_speed_mph: 23,
                                          precipitation_inches: 0)

      expect(invalid_condition).to_not be_valid
    end
  end

  describe "Dashboard Methods" do
    it "can chunk days with high temperatures in 10 degs" do
      Condition.write(date: "2013-12-12",
                      max_temperature_f: 45,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0)
      Condition.write(date: "2013-12-13",
                      max_temperature_f: 47,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0)
      Condition.write(date: "2013-12-14",
                      max_temperature_f: 32,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0)
   
      expect(Condition.days_with_high_temps_in(40..49).count).to eq(2)

    end

    it "can pull trips for a condition" do
      Station.write(name: "TestStation3",
                    lat: 3.1,
                    long: 3.2,
                    dock_count: 3,
                    city_name: "TestCityName3",
                    installation_date: "2011-11-11")
      Trip.write(duration: 90,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      condition = Condition.write(date: "2013-12-12",
                                  max_temperature_f: 45,
                                  mean_temperature_f: 20,
                                  min_temperature_f: 20,
                                  mean_humidity: 20,
                                  mean_visibility_miles: 1,
                                  max_wind_speed_mph: 23,
                                  precipitation_inches: 0)

      expect(condition.trips.count).to eq(2)
    end

    it "groups conditions by date with trip count" do
      Station.write(name: "TestStation3",
                    lat: 3.1,
                    long: 3.2,
                    dock_count: 3,
                    city_name: "TestCityName3",
                    installation_date: "2011-11-11")
      Trip.write(duration: 90,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 45,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 76,
                start_date: "2013-10-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 7,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 70,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Condition.write(date: "2013-12-12",
                      max_temperature_f: 32,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0)
      Condition.write(date: "2013-10-12",
                      max_temperature_f: 37,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0)
      Condition.write(date: "2013-06-13",
                      max_temperature_f: 39,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0)

      expect(Condition.grouped_by_date_number_of_trips.keys.count).to eq(3)
    end

    it "groups only days in temperature range" do
      Station.write(name: "TestStation3",
                    lat: 3.1,
                    long: 3.2,
                    dock_count: 3,
                    city_name: "TestCityName3",
                    installation_date: "2011-11-11")
      Trip.write(duration: 90,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 76,
                start_date: "2013-10-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 7,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Condition.write(date: "2013-12-12",
                      max_temperature_f: 12,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0)
      Condition.write(date: "2013-10-12",
                      max_temperature_f: 37,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0)
      Condition.write(date: "2013-06-13",
                      max_temperature_f: 39,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0)

      expect(Condition.grouped_days_in_range_max_temp(31..40).keys.count).to eq(2)
    end

    it "can find average rides for day in max_temp chunks" do
      Station.write(name: "TestStation3",
                    lat: 3.1,
                    long: 3.2,
                    dock_count: 3,
                    city_name: "TestCityName3",
                    installation_date: "2011-11-11")
      Trip.write(duration: 90,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 45,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 76,
                start_date: "2013-10-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 7,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 70,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Condition.write(date: "2013-12-12",
                      max_temperature_f: 32,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0)
      Condition.write(date: "2013-10-12",
                      max_temperature_f: 37,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0)
      Condition.write(date: "2013-06-13",
                      max_temperature_f: 39,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0) 
      
      expect(Condition.average_number_of_rides_in_range_max_temp(31..40)).to eq(2.33)

    end

    it "highest number of rides for day in max_temp chunks" do
      Station.write(name: "TestStation3",
                    lat: 3.1,
                    long: 3.2,
                    dock_count: 3,
                    city_name: "TestCityName3",
                    installation_date: "2011-11-11")
      Trip.write(duration: 90,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 45,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 76,
                start_date: "2013-10-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 7,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 70,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Condition.write(date: "2013-12-12",
                      max_temperature_f: 32,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0)
      Condition.write(date: "2013-10-12",
                      max_temperature_f: 37,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0)
      Condition.write(date: "2013-06-13",
                      max_temperature_f: 39,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0)
    
      expect(Condition.highest_number_of_rides_in_range_max_temp(31..40)).to eq(3)

    end

    it "lowest number of rides for day in max_temp chunks" do
      Station.write(name: "TestStation3",
                    lat: 3.1,
                    long: 3.2,
                    dock_count: 3,
                    city_name: "TestCityName3",
                    installation_date: "2011-11-11")
      Trip.write(duration: 90,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 45,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 76,
                start_date: "2013-10-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 7,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 70,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Condition.write(date: "2013-12-12",
                      max_temperature_f: 32,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0)
      Condition.write(date: "2013-10-12",
                      max_temperature_f: 37,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0)
      Condition.write(date: "2013-06-13",
                      max_temperature_f: 39,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0)
    
      expect(Condition.lowest_number_of_rides_in_range_max_temp(31..40)).to eq(1)

    end

    it "chunks days with precipitation into half_inches" do
      Condition.write(date: "2013-12-12",
                      max_temperature_f: 45,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0.1)
      Condition.write(date: "2013-12-13",
                      max_temperature_f: 47,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0.7)
      Condition.write(date: "2013-12-14",
                      max_temperature_f: 32,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0.3)  

      expect(Condition.days_with_precipitation_in(0..0.5).count).to eq(2)    

    end

    it "groups only days in precipitiation range" do
      Station.write(name: "TestStation3",
                    lat: 3.1,
                    long: 3.2,
                    dock_count: 3,
                    city_name: "TestCityName3",
                    installation_date: "2011-11-11")
      Trip.write(duration: 90,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 76,
                start_date: "2013-10-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 7,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Condition.write(date: "2013-12-12",
                      max_temperature_f: 12,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0.3)
      Condition.write(date: "2013-10-12",
                      max_temperature_f: 37,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0.7)
      Condition.write(date: "2013-06-13",
                      max_temperature_f: 39,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0.4)

      expect(Condition.grouped_days_in_range_precip(0..0.5).keys.count).to eq(2)   
    end

    it "finds average number of rides on days with precipitation in range" do
            Station.write(name: "TestStation3",
                    lat: 3.1,
                    long: 3.2,
                    dock_count: 3,
                    city_name: "TestCityName3",
                    installation_date: "2011-11-11")
      Trip.write(duration: 90,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 45,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 76,
                start_date: "2013-10-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 7,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 70,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Condition.write(date: "2013-12-12",
                      max_temperature_f: 32,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0.4)
      Condition.write(date: "2013-10-12",
                      max_temperature_f: 37,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0.3)
      Condition.write(date: "2013-06-13",
                      max_temperature_f: 39,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0.1)

      expect(Condition.average_number_of_rides_in_range_precip(0..0.5)).to eq(2.33)   
    end

    it "finds highest number of rides in range max temp" do
            Station.write(name: "TestStation3",
                    lat: 3.1,
                    long: 3.2,
                    dock_count: 3,
                    city_name: "TestCityName3",
                    installation_date: "2011-11-11")
      Trip.write(duration: 90,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 45,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 76,
                start_date: "2013-10-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 7,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 70,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Condition.write(date: "2013-12-12",
                      max_temperature_f: 32,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0.4)
      Condition.write(date: "2013-10-12",
                      max_temperature_f: 37,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0.3)
      Condition.write(date: "2013-06-13",
                      max_temperature_f: 39,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0.1)

      expect(Condition.highest_number_of_rides_in_range_precip(0..0.5)).to eq(3)
    end

    it "finds lowest number of rides on days in precipitation_inches range" do
      Station.write(name: "TestStation3",
                    lat: 3.1,
                    long: 3.2,
                    dock_count: 3,
                    city_name: "TestCityName3",
                    installation_date: "2011-11-11")
      Trip.write(duration: 90,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 45,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 76,
                start_date: "2013-10-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 7,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 70,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Condition.write(date: "2013-12-12",
                      max_temperature_f: 32,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0.4)
      Condition.write(date: "2013-10-12",
                      max_temperature_f: 37,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0.3)
      Condition.write(date: "2013-06-13",
                      max_temperature_f: 39,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0.1)

      expect(Condition.lowest_number_of_rides_in_range_precip(0..0.5)).to eq(1)
    end

    it "chunks mean_wind_speed into increments of 4" do 
      Condition.write(date: "2013-12-12",
                      max_temperature_f: 32,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      mean_wind_speed_mph: 20,
                      precipitation_inches: 0.4)
      Condition.write(date: "2013-10-12",
                      max_temperature_f: 37,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      mean_wind_speed_mph: 21,
                      precipitation_inches: 0.3)
      Condition.write(date: "2013-06-13",
                      max_temperature_f: 39,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      mean_wind_speed_mph: 10,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0.1)
    
      expect(Condition.days_with_mean_wind_speed_in(20..24).count).to eq(2)
    end

    it "groups days with mean_wind_speed_mph in range" do
      Station.write(name: "TestStation3",
                    lat: 3.1,
                    long: 3.2,
                    dock_count: 3,
                    city_name: "TestCityName3",
                    installation_date: "2011-11-11")
      Trip.write(duration: 90,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 45,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 76,
                start_date: "2013-10-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 7,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 70,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Condition.write(date: "2013-12-12",
                      max_temperature_f: 32,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      mean_wind_speed_mph: 10,
                      precipitation_inches: 0.4)
      Condition.write(date: "2013-10-12",
                      max_temperature_f: 37,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      mean_wind_speed_mph: 21,
                      precipitation_inches: 0.3)
      Condition.write(date: "2013-06-13",
                      max_temperature_f: 39,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      mean_wind_speed_mph: 20,
                      precipitation_inches: 0.1)

      expect(Condition.grouped_days_in_range_wind(20..24).count).to eq(2)
    end

    it "finds average trips take with days in mean_wind_speed_mph range" do
      Station.write(name: "TestStation3",
                    lat: 3.1,
                    long: 3.2,
                    dock_count: 3,
                    city_name: "TestCityName3",
                    installation_date: "2011-11-11")
      Trip.write(duration: 90,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 45,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 76,
                start_date: "2013-10-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 7,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 70,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Condition.write(date: "2013-12-12",
                      max_temperature_f: 32,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      mean_wind_speed_mph: 23,
                      precipitation_inches: 0.4)
      Condition.write(date: "2013-10-12",
                      max_temperature_f: 37,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      mean_wind_speed_mph: 21,
                      precipitation_inches: 0.3)
      Condition.write(date: "2013-06-13",
                      max_temperature_f: 39,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      mean_wind_speed_mph: 20,
                      precipitation_inches: 0.1)
   
      expect(Condition.average_number_of_rides_in_range_wind(20..24)).to eq(2.33)
    end
  
    it "finds days with highest ride count in mean wind speed" do
      Station.write(name: "TestStation3",
                    lat: 3.1,
                    long: 3.2,
                    dock_count: 3,
                    city_name: "TestCityName3",
                    installation_date: "2011-11-11")
      Trip.write(duration: 90,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 45,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 76,
                start_date: "2013-10-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 7,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 70,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Condition.write(date: "2013-12-12",
                      max_temperature_f: 32,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      mean_wind_speed_mph: 23,
                      precipitation_inches: 0.4)
      Condition.write(date: "2013-10-12",
                      max_temperature_f: 37,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      mean_wind_speed_mph: 21,
                      precipitation_inches: 0.3)
      Condition.write(date: "2013-06-13",
                      max_temperature_f: 39,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      mean_wind_speed_mph: 20,
                      precipitation_inches: 0.1)
   
      expect(Condition.highest_number_of_rides_in_range_mean_wind_speed(20.24)).to eq(3)
    end

    it "finds the day with lowest ride count in range of mean wind speed" do
      Station.write(name: "TestStation3",
                    lat: 3.1,
                    long: 3.2,
                    dock_count: 3,
                    city_name: "TestCityName3",
                    installation_date: "2011-11-11")
      Trip.write(duration: 90,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 45,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 76,
                start_date: "2013-10-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 7,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Trip.write(duration: 70,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber", 
                zipcode: 80211)
      Condition.write(date: "2013-12-12",
                      max_temperature_f: 32,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      mean_wind_speed_mph: 23,
                      precipitation_inches: 0.4)
      Condition.write(date: "2013-10-12",
                      max_temperature_f: 37,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      mean_wind_speed_mph: 21,
                      precipitation_inches: 0.3)
      Condition.write(date: "2013-06-13",
                      max_temperature_f: 39,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      mean_wind_speed_mph: 20,
                      precipitation_inches: 0.1)
   
      expect(Condition.lowest_number_of_rides_in_range_mean_wind_speed(20..24)).to eq(1)
    end

  it "can chunk days with mean visibility in 4 mile increments" do
    Condition.write(date: "2013-12-12",
                    max_temperature_f: 45,
                    mean_temperature_f: 20,
                    min_temperature_f: 20,
                    mean_humidity: 20,
                    mean_visibility_miles: 1,
                    max_wind_speed_mph: 23,
                    precipitation_inches: 0)
    Condition.write(date: "2013-12-13",
                    max_temperature_f: 47,
                    mean_temperature_f: 20,
                    min_temperature_f: 20,
                    mean_humidity: 20,
                    mean_visibility_miles: 1,
                    max_wind_speed_mph: 23,
                    precipitation_inches: 5)
    Condition.write(date: "2013-12-14",
                    max_temperature_f: 32,
                    mean_temperature_f: 20,
                    min_temperature_f: 20,
                    mean_humidity: 20,
                    mean_visibility_miles: 4,
                    max_wind_speed_mph: 23,
                    precipitation_inches: 0)

    expect(Condition.days_with_visibility_between(0..3).count).to eq(2)
  end

  it "groups conditions by date and mean visibility" do
  Station.write(name: "TestStation3",
                lat: 3.1,
                long: 3.2,
                dock_count: 3,
                city_name: "TestCityName3",
                installation_date: "2011-11-11")
  Trip.write(duration: 90,
            start_date: "2013-12-12",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 45,
            start_date: "2013-12-12",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 23,
            start_date: "2013-12-12",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 76,
            start_date: "2013-10-12",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 23,
            start_date: "2013-06-13",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 7,
            start_date: "2013-06-13",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 70,
            start_date: "2013-06-13",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Condition.write(date: "2013-12-12",
                  max_temperature_f: 32,
                  mean_temperature_f: 20,
                  min_temperature_f: 20,
                  mean_humidity: 20,
                  mean_visibility_miles: 1,
                  max_wind_speed_mph: 23,
                  precipitation_inches: 0)
  Condition.write(date: "2013-10-12",
                  max_temperature_f: 37,
                  mean_temperature_f: 20,
                  min_temperature_f: 20,
                  mean_humidity: 20,
                  mean_visibility_miles: 1,
                  max_wind_speed_mph: 23,
                  precipitation_inches: 0)
  Condition.write(date: "2013-06-13",
                  max_temperature_f: 39,
                  mean_temperature_f: 20,
                  min_temperature_f: 20,
                  mean_humidity: 20,
                  mean_visibility_miles: 1,
                  max_wind_speed_mph: 23,
                  precipitation_inches: 0)

  expect(Condition.grouped_days_in_range_mean_visibility(0..3).keys.count).to eq(3)
  end

  it "finds average rides in mean visibility" do
  Station.write(name: "TestStation3",
                lat: 3.1,
                long: 3.2,
                dock_count: 3,
                city_name: "TestCityName3",
                installation_date: "2011-11-11")
  Trip.write(duration: 90,
            start_date: "2013-12-12",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 45,
            start_date: "2013-12-12",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 23,
            start_date: "2013-12-12",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 76,
            start_date: "2013-10-12",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 23,
            start_date: "2013-06-13",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 7,
            start_date: "2013-06-13",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 70,
            start_date: "2013-06-13",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Condition.write(date: "2013-12-12",
                  max_temperature_f: 32,
                  mean_temperature_f: 20,
                  min_temperature_f: 20,
                  mean_humidity: 20,
                  mean_visibility_miles: 1,
                  max_wind_speed_mph: 23,
                  precipitation_inches: 0)
  Condition.write(date: "2013-10-12",
                  max_temperature_f: 37,
                  mean_temperature_f: 20,
                  min_temperature_f: 20,
                  mean_humidity: 20,
                  mean_visibility_miles: 1,
                  max_wind_speed_mph: 23,
                  precipitation_inches: 0)
  Condition.write(date: "2013-06-13",
                  max_temperature_f: 39,
                  mean_temperature_f: 20,
                  min_temperature_f: 20,
                  mean_humidity: 20,
                  mean_visibility_miles: 1,
                  max_wind_speed_mph: 23,
                  precipitation_inches: 0)

  expect(Condition.average_number_of_rides_in_mean_visibility(0..3)).to eq(2.33)
  end


  it "finds highest rides in mean visibility" do
  Station.write(name: "TestStation3",
                lat: 3.1,
                long: 3.2,
                dock_count: 3,
                city_name: "TestCityName3",
                installation_date: "2011-11-11")
  Trip.write(duration: 90,
            start_date: "2013-12-12",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 45,
            start_date: "2013-12-12",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 23,
            start_date: "2013-12-12",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 76,
            start_date: "2013-10-12",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 23,
            start_date: "2013-06-13",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 7,
            start_date: "2013-06-13",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 70,
            start_date: "2013-06-13",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Condition.write(date: "2013-12-12",
                  max_temperature_f: 32,
                  mean_temperature_f: 20,
                  min_temperature_f: 20,
                  mean_humidity: 20,
                  mean_visibility_miles: 1,
                  max_wind_speed_mph: 23,
                  precipitation_inches: 0)
  Condition.write(date: "2013-10-12",
                  max_temperature_f: 37,
                  mean_temperature_f: 20,
                  min_temperature_f: 20,
                  mean_humidity: 20,
                  mean_visibility_miles: 1,
                  max_wind_speed_mph: 23,
                  precipitation_inches: 0)
  Condition.write(date: "2013-06-13",
                  max_temperature_f: 39,
                  mean_temperature_f: 20,
                  min_temperature_f: 20,
                  mean_humidity: 20,
                  mean_visibility_miles: 1,
                  max_wind_speed_mph: 23,
                  precipitation_inches: 0)

  expect(Condition.highest_number_of_rides_in_mean_visibility(0..3)).to eq(3)
  end

  it "finds highest rides in mean visibility" do
  Station.write(name: "TestStation3",
                lat: 3.1,
                long: 3.2,
                dock_count: 3,
                city_name: "TestCityName3",
                installation_date: "2011-11-11")
  Trip.write(duration: 90,
            start_date: "2013-12-12",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 45,
            start_date: "2013-12-12",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 23,
            start_date: "2013-12-12",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 76,
            start_date: "2013-10-12",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 23,
            start_date: "2013-06-13",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 7,
            start_date: "2013-06-13",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Trip.write(duration: 70,
            start_date: "2013-06-13",
            start_station_name: "TestStation3",
            end_date: "2011-3-6",
            end_station_name: "TestStation3",
            bike_id: 3,
            subscription_type: "Subscriber",
            zipcode: 80211)
  Condition.write(date: "2013-12-12",
                  max_temperature_f: 32,
                  mean_temperature_f: 20,
                  min_temperature_f: 20,
                  mean_humidity: 20,
                  mean_visibility_miles: 1,
                  max_wind_speed_mph: 23,
                  precipitation_inches: 0)
  Condition.write(date: "2013-10-12",
                  max_temperature_f: 37,
                  mean_temperature_f: 20,
                  min_temperature_f: 20,
                  mean_humidity: 20,
                  mean_visibility_miles: 1,
                  max_wind_speed_mph: 23,
                  precipitation_inches: 0)
  Condition.write(date: "2013-06-13",
                  max_temperature_f: 39,
                  mean_temperature_f: 20,
                  min_temperature_f: 20,
                  mean_humidity: 20,
                  mean_visibility_miles: 1,
                  max_wind_speed_mph: 23,
                  precipitation_inches: 0)

  expect(Condition.lowest_number_of_rides_in_mean_visibility(0..3)).to eq(1)
  end

    it "finds weather conditions of day with highest rides" do
    Station.write(name: "TestStation3",
                  lat: 3.1,
                  long: 3.2,
                  dock_count: 3,
                  city_name: "TestCityName3",
                  installation_date: "2011-11-11")
    Trip.write(duration: 90,
              start_date: "2013-12-12",
              start_station_name: "TestStation3",
              end_date: "2011-3-6",
              end_station_name: "TestStation3",
              bike_id: 3,
              subscription_type: "Subscriber",
              zipcode: 80211)
    Trip.write(duration: 45,
              start_date: "2013-12-12",
              start_station_name: "TestStation3",
              end_date: "2011-3-6",
              end_station_name: "TestStation3",
              bike_id: 3,
              subscription_type: "Subscriber",
              zipcode: 80211)
    Trip.write(duration: 23,
              start_date: "2013-12-12",
              start_station_name: "TestStation3",
              end_date: "2011-3-6",
              end_station_name: "TestStation3",
              bike_id: 3,
              subscription_type: "Subscriber",
              zipcode: 80211)
    Trip.write(duration: 76,
              start_date: "2013-10-12",
              start_station_name: "TestStation3",
              end_date: "2011-3-6",
              end_station_name: "TestStation3",
              bike_id: 3,
              subscription_type: "Subscriber",
              zipcode: 80211)
    Trip.write(duration: 23,
              start_date: "2013-06-13",
              start_station_name: "TestStation3",
              end_date: "2011-3-6",
              end_station_name: "TestStation3",
              bike_id: 3,
              subscription_type: "Subscriber",
              zipcode: 80211)
    Trip.write(duration: 7,
              start_date: "2013-06-13",
              start_station_name: "TestStation3",
              end_date: "2011-3-6",
              end_station_name: "TestStation3",
              bike_id: 3,
              subscription_type: "Subscriber",
              zipcode: 80211)
    Trip.write(duration: 70,
              start_date: "2013-12-12",
              start_station_name: "TestStation3",
              end_date: "2011-3-6",
              end_station_name: "TestStation3",
              bike_id: 3,
              subscription_type: "Subscriber",
              zipcode: 80211)
    Condition.write(date: "2013-12-12",
                    max_temperature_f: 32,
                    mean_temperature_f: 20,
                    min_temperature_f: 20,
                    mean_humidity: 20,
                    mean_visibility_miles: 1,
                    max_wind_speed_mph: 23,
                    precipitation_inches: 0)
    Condition.write(date: "2013-10-12",
                    max_temperature_f: 37,
                    mean_temperature_f: 20,
                    min_temperature_f: 20,
                    mean_humidity: 20,
                    mean_visibility_miles: 1,
                    max_wind_speed_mph: 23,
                    precipitation_inches: 0)
    Condition.write(date: "2013-06-13",
                    max_temperature_f: 39,
                    mean_temperature_f: 20,
                    min_temperature_f: 20,
                    mean_humidity: 20,
                    mean_visibility_miles: 1,
                    max_wind_speed_mph: 23,
                    precipitation_inches: 0)

    expect(Condition.day_with_highest_number_of_rides.date.to_s).to eq("2013-12-12")
    end

    it "finds weather conditions of day with lowest rides" do
      Station.write(name: "TestStation3",
                    lat: 3.1,
                    long: 3.2,
                    dock_count: 3,
                    city_name: "TestCityName3",
                    installation_date: "2011-11-11")
      Trip.write(duration: 90,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 45,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-12-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 76,
                start_date: "2013-10-12",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 23,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 7,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Trip.write(duration: 70,
                start_date: "2013-06-13",
                start_station_name: "TestStation3",
                end_date: "2011-3-6",
                end_station_name: "TestStation3",
                bike_id: 3,
                subscription_type: "Subscriber",
                zipcode: 80211)
      Condition.write(date: "2013-12-12",
                      max_temperature_f: 32,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0)
      Condition.write(date: "2013-10-12",
                      max_temperature_f: 37,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0)
      Condition.write(date: "2013-06-13",
                      max_temperature_f: 39,
                      mean_temperature_f: 20,
                      min_temperature_f: 20,
                      mean_humidity: 20,
                      mean_visibility_miles: 1,
                      max_wind_speed_mph: 23,
                      precipitation_inches: 0)

      expect(Condition.day_with_lowest_number_of_rides.date.to_s).to eq("2013-10-12")
    end
  end
end

